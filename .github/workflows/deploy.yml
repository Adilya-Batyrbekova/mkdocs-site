name: Deploy MkDocs Site

on:
  pull_request:
  push:
    branches:
      - main  # Запускать на пуш или pull request в ветку main

jobs:
  lint:
    runs-on: ubuntu-latest  # Используем Ubuntu для выполнения работы
    steps:
      - name: Проверка исходного кода
        uses: actions/checkout@v2  # Проверяем код из репозитория

      - name: Установка Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Устанавливаем нужную версию Python

      - name: Установка зависимостей
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material markdownlint  # Устанавливаем MkDocs и его зависимости

      - name: Линтинг Markdown файлов
        run: |
          markdownlint docs/**/*.md  # Проверяем Markdown файлы на ошибки

  build:
    runs-on: ubuntu-latest  # Запускаем на той же системе
    needs: lint  # Ждем завершения задания lint
    steps:
      - name: Проверка исходного кода
        uses: actions/checkout@v2  # Проверяем код из репозитория

      - name: Установка Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'  # Устанавливаем нужную версию Python

      - name: Установка зависимостей
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material typograf  # Устанавливаем MkDocs, Typograf и его зависимости

      - name: Сборка сайта
        run: mkdocs build --clean  # Сборка статики

      - name: Валидация HTML
        run: |
          pip install html-validator-cli
          html-validator --file ./site/index.html  # Валидация собранного HTML

      - name: Минификация HTML
        run: |
          pip install minify-html
          minify-html ./site/*.html --output ./site/  # Минификация HTML файлов

      - name: Сборка с PostCSS
        run: |
          npm install -g postcss-cli autoprefixer
          postcss theme/styles.css -o theme/styles.min.css  # Сборка CSS с использованием PostCSS

      - name: Улучшение типографики
        run: |
          pip install typograf
          typograf ./site/*.html  # Применяем Typograf к HTML файлам

  deploy:
    runs-on: ubuntu-latest  # Используем Ubuntu для выполнения работы
    needs: build  # Ждем завершения сборки
    steps:
      - name: Проверка исходного кода
        uses: actions/checkout@v2  # Проверяем код из репозитория

      - name: Деплой на GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # Токен для деплоя
          publish_dir: ./site  # Папка с собранным сайтом
          publish_branch: gh-pages  # Ветка для деплоя
